#!/usr/bin/env python3
# Test script for patched logging module

# First, patch the logging module
exec(open('patch_logging.py').read())

# Now test the patched logging
import logging

def test_patched_logging():
    """Test the patched logging module"""
    
    print("üîç Testing Patched Logging Module")
    print("=" * 40)
    
    # Check if custom levels exist
    if hasattr(logging, 'SPAM'):
        print(f"‚úÖ SPAM level available: {logging.SPAM}")
    else:
        print("‚ùå SPAM level NOT available")
        
    if hasattr(logging, 'VERBOSE'):
        print(f"‚úÖ VERBOSE level available: {logging.VERBOSE}")
    else:
        print("‚ùå VERBOSE level NOT available")
        
    if hasattr(logging, 'NOTICE'):
        print(f"‚úÖ NOTICE level available: {logging.NOTICE}")
    else:
        print("‚ùå NOTICE level NOT available")
        
    if hasattr(logging, 'SUCCESS'):
        print(f"‚úÖ SUCCESS level available: {logging.SUCCESS}")
    else:
        print("‚ùå SUCCESS level NOT available")
    
    # Test if functions exist
    if hasattr(logging, 'spam'):
        print("‚úÖ logging.spam function available")
    else:
        print("‚ùå logging.spam function NOT available")
        
    if hasattr(logging, 'verbose'):
        print("‚úÖ logging.verbose function available")
    else:
        print("‚ùå logging.verbose function NOT available")
        
    if hasattr(logging, 'notice'):
        print("‚úÖ logging.notice function available")
    else:
        print("‚ùå logging.notice function NOT available")
        
    if hasattr(logging, 'success'):
        print("‚úÖ logging.success function available")
    else:
        print("‚ùå logging.success function NOT available")
    
    print("\nüéØ Testing Function Calls:")
    print("-" * 25)
    
    try:
        logging.spam("This is a SPAM level message")
        print("‚úÖ logging.spam() call successful")
    except Exception as e:
        print(f"‚ùå logging.spam() call failed: {e}")
        
    try:
        logging.verbose("This is a VERBOSE level message")
        print("‚úÖ logging.verbose() call successful")
    except Exception as e:
        print(f"‚ùå logging.verbose() call failed: {e}")
        
    try:
        logging.notice("This is a NOTICE level message")
        print("‚úÖ logging.notice() call successful")
    except Exception as e:
        print(f"‚ùå logging.notice() call failed: {e}")
        
    try:
        logging.success("This is a SUCCESS level message")
        print("‚úÖ logging.success() call successful")
    except Exception as e:
        print(f"‚ùå logging.success() call failed: {e}")

if __name__ == "__main__":
    test_patched_logging()
