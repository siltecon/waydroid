#!/usr/bin/env python3
# Test script for the updated waydroid.py main entry point

import sys
import os

# Add the current directory to the Python path
sys.path.insert(0, os.path.dirname(__file__))

# Import the main waydroid module - this should patch logging first
import waydroid

def test_main_import():
    """Test that the main waydroid module imports without errors"""
    
    print("üîç Testing Waydroid Main Import")
    print("=" * 40)
    
    # Check if custom levels exist in the logging module
    import logging
    
    if hasattr(logging, 'SPAM'):
        print(f"‚úÖ SPAM level available: {logging.SPAM}")
    else:
        print("‚ùå SPAM level NOT available")
        
    if hasattr(logging, 'VERBOSE'):
        print(f"‚úÖ VERBOSE level available: {logging.VERBOSE}")
    else:
        print("‚ùå VERBOSE level NOT available")
        
    if hasattr(logging, 'NOTICE'):
        print(f"‚úÖ NOTICE level available: {logging.NOTICE}")
    else:
        print("‚ùå NOTICE level NOT available")
        
    if hasattr(logging, 'SUCCESS'):
        print(f"‚úÖ SUCCESS level available: {logging.SUCCESS}")
    else:
        print("‚ùå SUCCESS level NOT available")
    
    # Test if functions exist
    if hasattr(logging, 'spam'):
        print("‚úÖ logging.spam function available")
    else:
        print("‚ùå logging.spam function NOT available")
        
    if hasattr(logging, 'verbose'):
        print("‚úÖ logging.verbose function available")
    else:
        print("‚ùå logging.verbose function NOT available")
        
    if hasattr(logging, 'notice'):
        print("‚úÖ logging.notice function available")
    else:
        print("‚ùå logging.notice function NOT available")
        
    if hasattr(logging, 'success'):
        print("‚úÖ logging.success function available")
    else:
        print("‚ùå logging.success function NOT available")
    
    print("\nüéØ Testing Function Calls:")
    print("-" * 25)
    
    try:
        logging.spam("This is a SPAM level message from main import")
        print("‚úÖ logging.spam() call successful")
    except Exception as e:
        print(f"‚ùå logging.spam() call failed: {e}")
        
    try:
        logging.verbose("This is a VERBOSE level message from main import")
        print("‚úÖ logging.verbose() call successful")
    except Exception as e:
        print(f"‚ùå logging.verbose() call failed: {e}")
        
    try:
        logging.notice("This is a NOTICE level message from main import")
        print("‚úÖ logging.notice() call successful")
    except Exception as e:
        print(f"‚ùå logging.notice() call failed: {e}")
        
    try:
        logging.success("This is a SUCCESS level message from main import")
        print("‚úÖ logging.success() call successful")
    except Exception as e:
        print(f"‚ùå logging.success() call failed: {e}")

if __name__ == "__main__":
    test_main_import()
